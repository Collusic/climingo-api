name: CI/CD Pipeline

on:
  push:
    branches:
      - 'feature/*'
      - 'chore/*'
  pull_request:
    branches:
      - dev

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: List files after checkout
        run: ls -la

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build
        env:
          JASYPT_PASSWORD: ${{ secrets.JASYPT_PASSWORD }}
          version: ${{ secrets.VERSION }}
          buildTime: ${{ secrets.BUILDTIME }}

      - name: Run tests
        run: ./gradlew test
        env:
          JASYPT_PASSWORD: ${{ secrets.JASYPT_PASSWORD }}
          version: ${{ secrets.VERSION }}
          buildTime: ${{ secrets.BUILDTIME }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: packaged-jar
          path: build/libs/*.jar

  build_and_deploy:
    runs-on: ubuntu-latest
    needs: build_and_test
    if: github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'dev'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Check JASYPT_PASSWORD environment variable
        run: |
          if [ -z "${{ secrets.JASYPT_PASSWORD }}" ]; then
            echo "JASYPT_PASSWORD is not set."
            exit 1
          else
            echo "JASYPT_PASSWORD is set."
          fi

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: packaged-jar
          path: build/libs

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          TAG=${{ github.sha }}
          docker build -t climingo/climingo:$TAG .
          docker push climingo/climingo:$TAG

      - name: Set up SSH Key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: executing remote ssh commands using password
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.HOST }}
            username: ubuntu
            key: ${{ secrets.SSH_KEY }}
            port: 22
            script: |
              docker pull climingo/climingo:latest
              docker stop climingo || true
              docker rm climingo || true
              docker run -d --name climingo -p 8080:8080 climingo/climingo:latest
